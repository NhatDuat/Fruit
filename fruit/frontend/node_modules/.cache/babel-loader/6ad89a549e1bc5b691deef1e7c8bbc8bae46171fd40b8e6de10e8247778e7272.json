{"ast":null,"code":"var _jsxFileName = \"D:\\\\Yuki\\\\DoAnTotNghiep\\\\fruit\\\\frontend\\\\src\\\\pages\\\\Fruits.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CommonSection from '../shared/CommonSection';\nimport '../styles/fruit.css';\nimport FruitCard from './../shared/FruitCard';\nimport SearchBar from '../shared/SearchBar';\nimport Newsletter from '../shared/Newsletter';\nimport { Container, Row, Col } from 'reactstrap';\nimport useFetch from '../hooks/useFetch';\nimport { BASE_URL } from '../untils/config.js';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fruits = () => {\n  _s();\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(0);\n  const {\n    data: fruits,\n    loading,\n    error\n  } = useFetch(`${BASE_URL}/fruits?page=${page}`);\n  const {\n    data: fruitCount\n  } = useFetch(`${BASE_URL}/fruits/search/getFruitCount`);\n  useEffect(() => {\n    const pages = Math.ceil(fruitCount / 8);\n    setPageCount(pages);\n    window.scrollTo(0, 0);\n  }, [page, fruitCount, fruits]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CommonSection, {\n      title: 'All Fruit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"pt-0\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [loading && /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-center pt-5\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 23\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-center pt-5\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 23\n        }, this), !loading && !error && /*#__PURE__*/_jsxDEV(Row, {\n          children: [fruits === null || fruits === void 0 ? void 0 : fruits.map(fruit => /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"3\",\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(FruitCard, {\n              fruit: fruit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)\n          }, fruit._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pagination d-flex align-items-center justify-content-center mt-4 gap-3\",\n              children: [...Array(pageCount).keys()].map(number => /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => setPage(number),\n                className: page === number ? 'active__page' : '',\n                children: number + 1\n              }, number, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Newsletter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Fruits, \"i0y9ftaVylnUp9P3+xKfxOghieg=\", false, function () {\n  return [useFetch, useFetch];\n});\n_c = Fruits;\nexport default Fruits;\nvar _c;\n$RefreshReg$(_c, \"Fruits\");","map":{"version":3,"names":["React","useState","useEffect","CommonSection","FruitCard","SearchBar","Newsletter","Container","Row","Col","useFetch","BASE_URL","Fruits","pageCount","setPageCount","page","setPage","data","fruits","loading","error","fruitCount","pages","Math","ceil","window","scrollTo","map","fruit","_id","Array","keys","number"],"sources":["D:/Yuki/DoAnTotNghiep/fruit/frontend/src/pages/Fruits.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CommonSection from '../shared/CommonSection';\r\n\r\nimport '../styles/fruit.css';\r\n\r\nimport FruitCard from './../shared/FruitCard';\r\nimport SearchBar from '../shared/SearchBar';\r\nimport Newsletter from '../shared/Newsletter';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nimport useFetch from '../hooks/useFetch';\r\nimport { BASE_URL } from '../untils/config.js';\r\n\r\nconst Fruits = () => {\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const {\r\n    data:fruits,\r\n    loading,\r\n    error,\r\n  } = useFetch(`${BASE_URL}/fruits?page=${page}`);\r\n  const { data:fruitCount } = useFetch(\r\n    `${BASE_URL}/fruits/search/getFruitCount`\r\n  );\r\n\r\n  useEffect(() => {\r\n    const pages = Math.ceil(fruitCount / 8);\r\n    setPageCount(pages);\r\n    window.scrollTo(0, 0);\r\n  }, [page, fruitCount, fruits]);\r\n\r\n  return (\r\n    <>\r\n      <CommonSection title={'All Fruit'}></CommonSection>\r\n      <section>\r\n        <Container>\r\n          <Row>\r\n            <SearchBar />\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n      <section className=\"pt-0\">\r\n        <Container>\r\n          {loading && <h4 className=\"text-center pt-5\">Loading...</h4>}\r\n          {loading && <h4 className=\"text-center pt-5\">{error}</h4>}\r\n\r\n          {!loading && !error && (\r\n            <Row>\r\n              {fruits?.map((fruit) => (\r\n                <Col lg=\"3\" className=\"mb-4\" key={fruit._id}>\r\n                  <FruitCard fruit={fruit} />\r\n                </Col>\r\n              ))}\r\n              <Col lg=\"12\">\r\n                <div className=\"pagination d-flex align-items-center justify-content-center mt-4 gap-3\">\r\n                  {[...Array(pageCount).keys()].map((number) => (\r\n                    <span\r\n                      key={number}\r\n                      onClick={() => setPage(number)}\r\n                      className={page === number ? 'active__page' : ''}\r\n                    >\r\n                      {number + 1}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </Container>\r\n      </section>\r\n      <Newsletter />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Fruits;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}